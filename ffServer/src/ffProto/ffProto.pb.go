// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ffProto.proto

/*
Package ffProto is a generated protocol buffer package.

It is generated from these files:
	ffProto.proto

It has these top-level messages:
	StDeviceInfo
	StAccountData
	StTeamMember
	StVector2
	StVector3
	StBattleMember
	StBattleProp
	MsgKeepAlive
	MsgServerRegister
	MsgServerNewBattle
	MsgServerBattleUserEnter
	MsgServerBattleUserLeave
	MsgPrepareLoginPlatformUniqueId
	MsgLoginPlatformUniqueId
	MsgLoginPlatformSidToken
	MsgReLogin
	MsgKick
	MsgEnterGameWorld
	MsgAgentDisConnect
	MsgEnterTeam
	MsgInviteJoinTeam
	MsgAnswerJoinTeam
	MsgLeaveTeam
	MsgEnterMatchServer
	MsgLeaveMatchServer
	MsgStartMatch
	MsgStopMatch
	MsgMatchResult
	MsgBattleStartSync
	MsgBattleMember
	MsgBattleMemberLeave
	MsgBattleProp
	MsgBattlePickProp
	MsgBattleDropProp
	MsgBattleAddProp
	MsgBattleChangeProp
	MsgBattleRemoveProp
	MsgBattleRoleAction
	MsgBattleRoleEyeField
	MsgBattleRoleMove
	MsgBattleRoleShootState
	MsgBattleRoleShoot
	MsgBattleRoleShootHit
	MsgBattleRoleHeal
	MsgBattleRoleHealth
	MsgBattleRoleDead
	MsgBattleRunAway
	MsgBattleSettle
*/
package ffProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_KeepAlive                    MessageType = 0
	MessageType_ServerRegister               MessageType = 1
	MessageType_ServerNewBattle              MessageType = 2
	MessageType_ServerBattleUserEnter        MessageType = 3
	MessageType_ServerBattleUserLeave        MessageType = 4
	MessageType_PrepareLoginPlatformUniqueId MessageType = 5
	MessageType_LoginPlatformUniqueId        MessageType = 6
	MessageType_LoginPlatformSidToken        MessageType = 7
	MessageType_ReLogin                      MessageType = 8
	MessageType_Kick                         MessageType = 9
	MessageType_EnterGameWorld               MessageType = 10
	MessageType_AgentDisConnect              MessageType = 11
	MessageType_EnterTeam                    MessageType = 12
	MessageType_InviteJoinTeam               MessageType = 13
	MessageType_AnswerJoinTeam               MessageType = 14
	MessageType_LeaveTeam                    MessageType = 15
	MessageType_EnterMatchServer             MessageType = 16
	MessageType_LeaveMatchServer             MessageType = 17
	MessageType_StartMatch                   MessageType = 18
	MessageType_StopMatch                    MessageType = 19
	MessageType_MatchResult                  MessageType = 20
	MessageType_BattleStartSync              MessageType = 21
	MessageType_BattleMember                 MessageType = 22
	MessageType_BattleMemberLeave            MessageType = 23
	MessageType_BattleProp                   MessageType = 24
	MessageType_BattlePickProp               MessageType = 25
	MessageType_BattleDropProp               MessageType = 26
	MessageType_BattleAddProp                MessageType = 27
	MessageType_BattleChangeProp             MessageType = 28
	MessageType_BattleRemoveProp             MessageType = 29
	MessageType_BattleRoleAction             MessageType = 30
	MessageType_BattleRoleEyeField           MessageType = 31
	MessageType_BattleRoleMove               MessageType = 32
	MessageType_BattleRoleShootState         MessageType = 33
	MessageType_BattleRoleShoot              MessageType = 34
	MessageType_BattleRoleShootHit           MessageType = 35
	MessageType_BattleRoleHeal               MessageType = 36
	MessageType_BattleRoleHealth             MessageType = 37
	MessageType_BattleRoleDead               MessageType = 38
	MessageType_BattleRunAway                MessageType = 39
	MessageType_BattleSettle                 MessageType = 40
)

var MessageType_name = map[int32]string{
	0:  "KeepAlive",
	1:  "ServerRegister",
	2:  "ServerNewBattle",
	3:  "ServerBattleUserEnter",
	4:  "ServerBattleUserLeave",
	5:  "PrepareLoginPlatformUniqueId",
	6:  "LoginPlatformUniqueId",
	7:  "LoginPlatformSidToken",
	8:  "ReLogin",
	9:  "Kick",
	10: "EnterGameWorld",
	11: "AgentDisConnect",
	12: "EnterTeam",
	13: "InviteJoinTeam",
	14: "AnswerJoinTeam",
	15: "LeaveTeam",
	16: "EnterMatchServer",
	17: "LeaveMatchServer",
	18: "StartMatch",
	19: "StopMatch",
	20: "MatchResult",
	21: "BattleStartSync",
	22: "BattleMember",
	23: "BattleMemberLeave",
	24: "BattleProp",
	25: "BattlePickProp",
	26: "BattleDropProp",
	27: "BattleAddProp",
	28: "BattleChangeProp",
	29: "BattleRemoveProp",
	30: "BattleRoleAction",
	31: "BattleRoleEyeField",
	32: "BattleRoleMove",
	33: "BattleRoleShootState",
	34: "BattleRoleShoot",
	35: "BattleRoleShootHit",
	36: "BattleRoleHeal",
	37: "BattleRoleHealth",
	38: "BattleRoleDead",
	39: "BattleRunAway",
	40: "BattleSettle",
}
var MessageType_value = map[string]int32{
	"KeepAlive":                    0,
	"ServerRegister":               1,
	"ServerNewBattle":              2,
	"ServerBattleUserEnter":        3,
	"ServerBattleUserLeave":        4,
	"PrepareLoginPlatformUniqueId": 5,
	"LoginPlatformUniqueId":        6,
	"LoginPlatformSidToken":        7,
	"ReLogin":                      8,
	"Kick":                         9,
	"EnterGameWorld":               10,
	"AgentDisConnect":              11,
	"EnterTeam":                    12,
	"InviteJoinTeam":               13,
	"AnswerJoinTeam":               14,
	"LeaveTeam":                    15,
	"EnterMatchServer":             16,
	"LeaveMatchServer":             17,
	"StartMatch":                   18,
	"StopMatch":                    19,
	"MatchResult":                  20,
	"BattleStartSync":              21,
	"BattleMember":                 22,
	"BattleMemberLeave":            23,
	"BattleProp":                   24,
	"BattlePickProp":               25,
	"BattleDropProp":               26,
	"BattleAddProp":                27,
	"BattleChangeProp":             28,
	"BattleRemoveProp":             29,
	"BattleRoleAction":             30,
	"BattleRoleEyeField":           31,
	"BattleRoleMove":               32,
	"BattleRoleShootState":         33,
	"BattleRoleShoot":              34,
	"BattleRoleShootHit":           35,
	"BattleRoleHeal":               36,
	"BattleRoleHealth":             37,
	"BattleRoleDead":               38,
	"BattleRunAway":                39,
	"BattleSettle":                 40,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Generated by the msggen.py message compiler.
type StDeviceInfo struct {
	DeviceGUID            string `protobuf:"bytes,1,opt,name=deviceGUID" json:"deviceGUID,omitempty"`
	DeviceType            string `protobuf:"bytes,2,opt,name=deviceType" json:"deviceType,omitempty"`
	OperatingSystem       string `protobuf:"bytes,3,opt,name=operatingSystem" json:"operatingSystem,omitempty"`
	OperatingSystemFamily string `protobuf:"bytes,4,opt,name=operatingSystemFamily" json:"operatingSystemFamily,omitempty"`
	ProcessorType         string `protobuf:"bytes,5,opt,name=processorType" json:"processorType,omitempty"`
	ProcessorFrequency    int32  `protobuf:"varint,6,opt,name=processorFrequency" json:"processorFrequency,omitempty"`
	ProcessorCount        int32  `protobuf:"varint,7,opt,name=processorCount" json:"processorCount,omitempty"`
	SystemMemorySize      int32  `protobuf:"varint,8,opt,name=systemMemorySize" json:"systemMemorySize,omitempty"`
	GraphicsMemorySize    int32  `protobuf:"varint,9,opt,name=graphicsMemorySize" json:"graphicsMemorySize,omitempty"`
}

func (m *StDeviceInfo) Reset()                    { *m = StDeviceInfo{} }
func (m *StDeviceInfo) String() string            { return proto.CompactTextString(m) }
func (*StDeviceInfo) ProtoMessage()               {}
func (*StDeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StDeviceInfo) GetDeviceGUID() string {
	if m != nil {
		return m.DeviceGUID
	}
	return ""
}

func (m *StDeviceInfo) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *StDeviceInfo) GetOperatingSystem() string {
	if m != nil {
		return m.OperatingSystem
	}
	return ""
}

func (m *StDeviceInfo) GetOperatingSystemFamily() string {
	if m != nil {
		return m.OperatingSystemFamily
	}
	return ""
}

func (m *StDeviceInfo) GetProcessorType() string {
	if m != nil {
		return m.ProcessorType
	}
	return ""
}

func (m *StDeviceInfo) GetProcessorFrequency() int32 {
	if m != nil {
		return m.ProcessorFrequency
	}
	return 0
}

func (m *StDeviceInfo) GetProcessorCount() int32 {
	if m != nil {
		return m.ProcessorCount
	}
	return 0
}

func (m *StDeviceInfo) GetSystemMemorySize() int32 {
	if m != nil {
		return m.SystemMemorySize
	}
	return 0
}

func (m *StDeviceInfo) GetGraphicsMemorySize() int32 {
	if m != nil {
		return m.GraphicsMemorySize
	}
	return 0
}

type StAccountData struct {
	IsFresh    bool            `protobuf:"varint,1,opt,name=isFresh" json:"isFresh,omitempty"`
	ServerTime int32           `protobuf:"varint,2,opt,name=serverTime" json:"serverTime,omitempty"`
	ServerZone int32           `protobuf:"varint,3,opt,name=serverZone" json:"serverZone,omitempty"`
	Name       string          `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Datas      map[int32]int32 `protobuf:"bytes,5,rep,name=datas" json:"datas,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *StAccountData) Reset()                    { *m = StAccountData{} }
func (m *StAccountData) String() string            { return proto.CompactTextString(m) }
func (*StAccountData) ProtoMessage()               {}
func (*StAccountData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StAccountData) GetIsFresh() bool {
	if m != nil {
		return m.IsFresh
	}
	return false
}

func (m *StAccountData) GetServerTime() int32 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

func (m *StAccountData) GetServerZone() int32 {
	if m != nil {
		return m.ServerZone
	}
	return 0
}

func (m *StAccountData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StAccountData) GetDatas() map[int32]int32 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type StTeamMember struct {
	Name  string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Datas map[int32]int32 `protobuf:"bytes,2,rep,name=datas" json:"datas,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *StTeamMember) Reset()                    { *m = StTeamMember{} }
func (m *StTeamMember) String() string            { return proto.CompactTextString(m) }
func (*StTeamMember) ProtoMessage()               {}
func (*StTeamMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StTeamMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StTeamMember) GetDatas() map[int32]int32 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type StVector2 struct {
	X int64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y int64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
}

func (m *StVector2) Reset()                    { *m = StVector2{} }
func (m *StVector2) String() string            { return proto.CompactTextString(m) }
func (*StVector2) ProtoMessage()               {}
func (*StVector2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StVector2) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *StVector2) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type StVector3 struct {
	X int64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y int64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
	Z int64 `protobuf:"fixed64,3,opt,name=z" json:"z,omitempty"`
}

func (m *StVector3) Reset()                    { *m = StVector3{} }
func (m *StVector3) String() string            { return proto.CompactTextString(m) }
func (*StVector3) ProtoMessage()               {}
func (*StVector3) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StVector3) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *StVector3) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *StVector3) GetZ() int64 {
	if m != nil {
		return m.Z
	}
	return 0
}

type StBattleMember struct {
	Position *StVector3      `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Sight    *StVector3      `protobuf:"bytes,2,opt,name=sight" json:"sight,omitempty"`
	Uniqueid int32           `protobuf:"varint,3,opt,name=uniqueid" json:"uniqueid,omitempty"`
	Datas    map[int32]int32 `protobuf:"bytes,4,rep,name=datas" json:"datas,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *StBattleMember) Reset()                    { *m = StBattleMember{} }
func (m *StBattleMember) String() string            { return proto.CompactTextString(m) }
func (*StBattleMember) ProtoMessage()               {}
func (*StBattleMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *StBattleMember) GetPosition() *StVector3 {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *StBattleMember) GetSight() *StVector3 {
	if m != nil {
		return m.Sight
	}
	return nil
}

func (m *StBattleMember) GetUniqueid() int32 {
	if m != nil {
		return m.Uniqueid
	}
	return 0
}

func (m *StBattleMember) GetDatas() map[int32]int32 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type StBattleProp struct {
	Position   *StVector3 `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Uniqueid   int32      `protobuf:"varint,2,opt,name=uniqueid" json:"uniqueid,omitempty"`
	Templateid int32      `protobuf:"varint,3,opt,name=templateid" json:"templateid,omitempty"`
	Number     int32      `protobuf:"varint,4,opt,name=number" json:"number,omitempty"`
}

func (m *StBattleProp) Reset()                    { *m = StBattleProp{} }
func (m *StBattleProp) String() string            { return proto.CompactTextString(m) }
func (*StBattleProp) ProtoMessage()               {}
func (*StBattleProp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *StBattleProp) GetPosition() *StVector3 {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *StBattleProp) GetUniqueid() int32 {
	if m != nil {
		return m.Uniqueid
	}
	return 0
}

func (m *StBattleProp) GetTemplateid() int32 {
	if m != nil {
		return m.Templateid
	}
	return 0
}

func (m *StBattleProp) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type MsgKeepAlive struct {
	Number int32 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *MsgKeepAlive) Reset()                    { *m = MsgKeepAlive{} }
func (m *MsgKeepAlive) String() string            { return proto.CompactTextString(m) }
func (*MsgKeepAlive) ProtoMessage()               {}
func (*MsgKeepAlive) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MsgKeepAlive) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type MsgServerRegister struct {
	ServerType string `protobuf:"bytes,1,opt,name=serverType" json:"serverType,omitempty"`
	ServerID   int32  `protobuf:"varint,2,opt,name=serverID" json:"serverID,omitempty"`
	Result     int32  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgServerRegister) Reset()                    { *m = MsgServerRegister{} }
func (m *MsgServerRegister) String() string            { return proto.CompactTextString(m) }
func (*MsgServerRegister) ProtoMessage()               {}
func (*MsgServerRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MsgServerRegister) GetServerType() string {
	if m != nil {
		return m.ServerType
	}
	return ""
}

func (m *MsgServerRegister) GetServerID() int32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *MsgServerRegister) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgServerNewBattle struct {
	UUIDBattle uint64   `protobuf:"varint,1,opt,name=UUIDBattle" json:"UUIDBattle,omitempty"`
	UserTokens []uint64 `protobuf:"varint,2,rep,packed,name=userTokens" json:"userTokens,omitempty"`
	Result     int32    `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgServerNewBattle) Reset()                    { *m = MsgServerNewBattle{} }
func (m *MsgServerNewBattle) String() string            { return proto.CompactTextString(m) }
func (*MsgServerNewBattle) ProtoMessage()               {}
func (*MsgServerNewBattle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MsgServerNewBattle) GetUUIDBattle() uint64 {
	if m != nil {
		return m.UUIDBattle
	}
	return 0
}

func (m *MsgServerNewBattle) GetUserTokens() []uint64 {
	if m != nil {
		return m.UserTokens
	}
	return nil
}

func (m *MsgServerNewBattle) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgServerBattleUserEnter struct {
	UUIDBattle uint64 `protobuf:"varint,1,opt,name=UUIDBattle" json:"UUIDBattle,omitempty"`
	UserToken  uint64 `protobuf:"varint,2,opt,name=userToken" json:"userToken,omitempty"`
	Result     int32  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgServerBattleUserEnter) Reset()                    { *m = MsgServerBattleUserEnter{} }
func (m *MsgServerBattleUserEnter) String() string            { return proto.CompactTextString(m) }
func (*MsgServerBattleUserEnter) ProtoMessage()               {}
func (*MsgServerBattleUserEnter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MsgServerBattleUserEnter) GetUUIDBattle() uint64 {
	if m != nil {
		return m.UUIDBattle
	}
	return 0
}

func (m *MsgServerBattleUserEnter) GetUserToken() uint64 {
	if m != nil {
		return m.UserToken
	}
	return 0
}

func (m *MsgServerBattleUserEnter) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgServerBattleUserLeave struct {
	UUIDBattle uint64 `protobuf:"varint,1,opt,name=UUIDBattle" json:"UUIDBattle,omitempty"`
	UserToken  uint64 `protobuf:"varint,2,opt,name=userToken" json:"userToken,omitempty"`
	Result     int32  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgServerBattleUserLeave) Reset()                    { *m = MsgServerBattleUserLeave{} }
func (m *MsgServerBattleUserLeave) String() string            { return proto.CompactTextString(m) }
func (*MsgServerBattleUserLeave) ProtoMessage()               {}
func (*MsgServerBattleUserLeave) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MsgServerBattleUserLeave) GetUUIDBattle() uint64 {
	if m != nil {
		return m.UUIDBattle
	}
	return 0
}

func (m *MsgServerBattleUserLeave) GetUserToken() uint64 {
	if m != nil {
		return m.UserToken
	}
	return 0
}

func (m *MsgServerBattleUserLeave) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgPrepareLoginPlatformUniqueId struct {
	SubChannel        string `protobuf:"bytes,1,opt,name=subChannel" json:"subChannel,omitempty"`
	UUIDPlatformBound string `protobuf:"bytes,2,opt,name=UUIDPlatformBound" json:"UUIDPlatformBound,omitempty"`
	UUIDPlatformLogin string `protobuf:"bytes,3,opt,name=UUIDPlatformLogin" json:"UUIDPlatformLogin,omitempty"`
	RandomSalt        string `protobuf:"bytes,4,opt,name=randomSalt" json:"randomSalt,omitempty"`
	Timestamp         int32  `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	FixSalt           int32  `protobuf:"varint,6,opt,name=fixSalt" json:"fixSalt,omitempty"`
	Status            int32  `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	Result            int32  `protobuf:"varint,8,opt,name=result" json:"result,omitempty"`
}

func (m *MsgPrepareLoginPlatformUniqueId) Reset()         { *m = MsgPrepareLoginPlatformUniqueId{} }
func (m *MsgPrepareLoginPlatformUniqueId) String() string { return proto.CompactTextString(m) }
func (*MsgPrepareLoginPlatformUniqueId) ProtoMessage()    {}
func (*MsgPrepareLoginPlatformUniqueId) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *MsgPrepareLoginPlatformUniqueId) GetSubChannel() string {
	if m != nil {
		return m.SubChannel
	}
	return ""
}

func (m *MsgPrepareLoginPlatformUniqueId) GetUUIDPlatformBound() string {
	if m != nil {
		return m.UUIDPlatformBound
	}
	return ""
}

func (m *MsgPrepareLoginPlatformUniqueId) GetUUIDPlatformLogin() string {
	if m != nil {
		return m.UUIDPlatformLogin
	}
	return ""
}

func (m *MsgPrepareLoginPlatformUniqueId) GetRandomSalt() string {
	if m != nil {
		return m.RandomSalt
	}
	return ""
}

func (m *MsgPrepareLoginPlatformUniqueId) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgPrepareLoginPlatformUniqueId) GetFixSalt() int32 {
	if m != nil {
		return m.FixSalt
	}
	return 0
}

func (m *MsgPrepareLoginPlatformUniqueId) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MsgPrepareLoginPlatformUniqueId) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgLoginPlatformUniqueId struct {
	TokenCustom string        `protobuf:"bytes,1,opt,name=tokenCustom" json:"tokenCustom,omitempty"`
	DeviceInfo  *StDeviceInfo `protobuf:"bytes,2,opt,name=deviceInfo" json:"deviceInfo,omitempty"`
	UUIDLogin   uint64        `protobuf:"varint,3,opt,name=UUIDLogin" json:"UUIDLogin,omitempty"`
	Result      int32         `protobuf:"varint,4,opt,name=result" json:"result,omitempty"`
}

func (m *MsgLoginPlatformUniqueId) Reset()                    { *m = MsgLoginPlatformUniqueId{} }
func (m *MsgLoginPlatformUniqueId) String() string            { return proto.CompactTextString(m) }
func (*MsgLoginPlatformUniqueId) ProtoMessage()               {}
func (*MsgLoginPlatformUniqueId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *MsgLoginPlatformUniqueId) GetTokenCustom() string {
	if m != nil {
		return m.TokenCustom
	}
	return ""
}

func (m *MsgLoginPlatformUniqueId) GetDeviceInfo() *StDeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *MsgLoginPlatformUniqueId) GetUUIDLogin() uint64 {
	if m != nil {
		return m.UUIDLogin
	}
	return 0
}

func (m *MsgLoginPlatformUniqueId) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgLoginPlatformSidToken struct {
	TokenPlatform string        `protobuf:"bytes,1,opt,name=tokenPlatform" json:"tokenPlatform,omitempty"`
	DeviceInfo    *StDeviceInfo `protobuf:"bytes,2,opt,name=deviceInfo" json:"deviceInfo,omitempty"`
	UUIDLogin     uint64        `protobuf:"varint,3,opt,name=UUIDLogin" json:"UUIDLogin,omitempty"`
	Result        int32         `protobuf:"varint,4,opt,name=result" json:"result,omitempty"`
}

func (m *MsgLoginPlatformSidToken) Reset()                    { *m = MsgLoginPlatformSidToken{} }
func (m *MsgLoginPlatformSidToken) String() string            { return proto.CompactTextString(m) }
func (*MsgLoginPlatformSidToken) ProtoMessage()               {}
func (*MsgLoginPlatformSidToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *MsgLoginPlatformSidToken) GetTokenPlatform() string {
	if m != nil {
		return m.TokenPlatform
	}
	return ""
}

func (m *MsgLoginPlatformSidToken) GetDeviceInfo() *StDeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *MsgLoginPlatformSidToken) GetUUIDLogin() uint64 {
	if m != nil {
		return m.UUIDLogin
	}
	return 0
}

func (m *MsgLoginPlatformSidToken) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgReLogin struct {
	CheckData  string        `protobuf:"bytes,1,opt,name=checkData" json:"checkData,omitempty"`
	DeviceInfo *StDeviceInfo `protobuf:"bytes,2,opt,name=deviceInfo" json:"deviceInfo,omitempty"`
	Result     int32         `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgReLogin) Reset()                    { *m = MsgReLogin{} }
func (m *MsgReLogin) String() string            { return proto.CompactTextString(m) }
func (*MsgReLogin) ProtoMessage()               {}
func (*MsgReLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *MsgReLogin) GetCheckData() string {
	if m != nil {
		return m.CheckData
	}
	return ""
}

func (m *MsgReLogin) GetDeviceInfo() *StDeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *MsgReLogin) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgKick struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *MsgKick) Reset()                    { *m = MsgKick{} }
func (m *MsgKick) String() string            { return proto.CompactTextString(m) }
func (*MsgKick) ProtoMessage()               {}
func (*MsgKick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MsgKick) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgEnterGameWorld struct {
	ServerID  int32  `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	UUIDLogin uint64 `protobuf:"varint,2,opt,name=UUIDLogin" json:"UUIDLogin,omitempty"`
	Result    int32  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgEnterGameWorld) Reset()                    { *m = MsgEnterGameWorld{} }
func (m *MsgEnterGameWorld) String() string            { return proto.CompactTextString(m) }
func (*MsgEnterGameWorld) ProtoMessage()               {}
func (*MsgEnterGameWorld) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *MsgEnterGameWorld) GetServerID() int32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *MsgEnterGameWorld) GetUUIDLogin() uint64 {
	if m != nil {
		return m.UUIDLogin
	}
	return 0
}

func (m *MsgEnterGameWorld) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgAgentDisConnect struct {
}

func (m *MsgAgentDisConnect) Reset()                    { *m = MsgAgentDisConnect{} }
func (m *MsgAgentDisConnect) String() string            { return proto.CompactTextString(m) }
func (*MsgAgentDisConnect) ProtoMessage()               {}
func (*MsgAgentDisConnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type MsgEnterTeam struct {
	Teamid int32 `protobuf:"varint,1,opt,name=teamid" json:"teamid,omitempty"`
}

func (m *MsgEnterTeam) Reset()                    { *m = MsgEnterTeam{} }
func (m *MsgEnterTeam) String() string            { return proto.CompactTextString(m) }
func (*MsgEnterTeam) ProtoMessage()               {}
func (*MsgEnterTeam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *MsgEnterTeam) GetTeamid() int32 {
	if m != nil {
		return m.Teamid
	}
	return 0
}

type MsgInviteJoinTeam struct {
	UUIDTarget uint64 `protobuf:"varint,1,opt,name=UUIDTarget" json:"UUIDTarget,omitempty"`
	Result     int32  `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
}

func (m *MsgInviteJoinTeam) Reset()                    { *m = MsgInviteJoinTeam{} }
func (m *MsgInviteJoinTeam) String() string            { return proto.CompactTextString(m) }
func (*MsgInviteJoinTeam) ProtoMessage()               {}
func (*MsgInviteJoinTeam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *MsgInviteJoinTeam) GetUUIDTarget() uint64 {
	if m != nil {
		return m.UUIDTarget
	}
	return 0
}

func (m *MsgInviteJoinTeam) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgAnswerJoinTeam struct {
	InvitePlayer string `protobuf:"bytes,1,opt,name=invitePlayer" json:"invitePlayer,omitempty"`
	Join         bool   `protobuf:"varint,2,opt,name=join" json:"join,omitempty"`
	Result       int32  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgAnswerJoinTeam) Reset()                    { *m = MsgAnswerJoinTeam{} }
func (m *MsgAnswerJoinTeam) String() string            { return proto.CompactTextString(m) }
func (*MsgAnswerJoinTeam) ProtoMessage()               {}
func (*MsgAnswerJoinTeam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *MsgAnswerJoinTeam) GetInvitePlayer() string {
	if m != nil {
		return m.InvitePlayer
	}
	return ""
}

func (m *MsgAnswerJoinTeam) GetJoin() bool {
	if m != nil {
		return m.Join
	}
	return false
}

func (m *MsgAnswerJoinTeam) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgLeaveTeam struct {
}

func (m *MsgLeaveTeam) Reset()                    { *m = MsgLeaveTeam{} }
func (m *MsgLeaveTeam) String() string            { return proto.CompactTextString(m) }
func (*MsgLeaveTeam) ProtoMessage()               {}
func (*MsgLeaveTeam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type MsgEnterMatchServer struct {
	UUIDAccount uint64 `protobuf:"varint,1,opt,name=UUIDAccount" json:"UUIDAccount,omitempty"`
	UUIDTeam    uint64 `protobuf:"varint,2,opt,name=UUIDTeam" json:"UUIDTeam,omitempty"`
	Result      int32  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgEnterMatchServer) Reset()                    { *m = MsgEnterMatchServer{} }
func (m *MsgEnterMatchServer) String() string            { return proto.CompactTextString(m) }
func (*MsgEnterMatchServer) ProtoMessage()               {}
func (*MsgEnterMatchServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *MsgEnterMatchServer) GetUUIDAccount() uint64 {
	if m != nil {
		return m.UUIDAccount
	}
	return 0
}

func (m *MsgEnterMatchServer) GetUUIDTeam() uint64 {
	if m != nil {
		return m.UUIDTeam
	}
	return 0
}

func (m *MsgEnterMatchServer) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgLeaveMatchServer struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *MsgLeaveMatchServer) Reset()                    { *m = MsgLeaveMatchServer{} }
func (m *MsgLeaveMatchServer) String() string            { return proto.CompactTextString(m) }
func (*MsgLeaveMatchServer) ProtoMessage()               {}
func (*MsgLeaveMatchServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *MsgLeaveMatchServer) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgStartMatch struct {
	MatchMode int32 `protobuf:"varint,1,opt,name=MatchMode" json:"MatchMode,omitempty"`
	Stranger  int32 `protobuf:"varint,2,opt,name=Stranger" json:"Stranger,omitempty"`
	Result    int32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgStartMatch) Reset()                    { *m = MsgStartMatch{} }
func (m *MsgStartMatch) String() string            { return proto.CompactTextString(m) }
func (*MsgStartMatch) ProtoMessage()               {}
func (*MsgStartMatch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *MsgStartMatch) GetMatchMode() int32 {
	if m != nil {
		return m.MatchMode
	}
	return 0
}

func (m *MsgStartMatch) GetStranger() int32 {
	if m != nil {
		return m.Stranger
	}
	return 0
}

func (m *MsgStartMatch) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgStopMatch struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *MsgStopMatch) Reset()                    { *m = MsgStopMatch{} }
func (m *MsgStopMatch) String() string            { return proto.CompactTextString(m) }
func (*MsgStopMatch) ProtoMessage()               {}
func (*MsgStopMatch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *MsgStopMatch) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgMatchResult struct {
	Addr       string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	UUIDBattle uint64 `protobuf:"varint,2,opt,name=UUIDBattle" json:"UUIDBattle,omitempty"`
	UUIDToken  uint64 `protobuf:"varint,3,opt,name=UUIDToken" json:"UUIDToken,omitempty"`
	Result     int32  `protobuf:"varint,4,opt,name=result" json:"result,omitempty"`
}

func (m *MsgMatchResult) Reset()                    { *m = MsgMatchResult{} }
func (m *MsgMatchResult) String() string            { return proto.CompactTextString(m) }
func (*MsgMatchResult) ProtoMessage()               {}
func (*MsgMatchResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *MsgMatchResult) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *MsgMatchResult) GetUUIDBattle() uint64 {
	if m != nil {
		return m.UUIDBattle
	}
	return 0
}

func (m *MsgMatchResult) GetUUIDToken() uint64 {
	if m != nil {
		return m.UUIDToken
	}
	return 0
}

func (m *MsgMatchResult) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleStartSync struct {
	UUIDBattle    uint64          `protobuf:"varint,2,opt,name=UUIDBattle" json:"UUIDBattle,omitempty"`
	UUIDToken     uint64          `protobuf:"varint,3,opt,name=UUIDToken" json:"UUIDToken,omitempty"`
	PreloadBattle map[int32]int32 `protobuf:"bytes,4,rep,name=PreloadBattle" json:"PreloadBattle,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	PreloadScene  map[int32]int32 `protobuf:"bytes,5,rep,name=PreloadScene" json:"PreloadScene,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Uniqueid      int32           `protobuf:"varint,6,opt,name=uniqueid" json:"uniqueid,omitempty"`
	Result        int32           `protobuf:"varint,7,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleStartSync) Reset()                    { *m = MsgBattleStartSync{} }
func (m *MsgBattleStartSync) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleStartSync) ProtoMessage()               {}
func (*MsgBattleStartSync) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *MsgBattleStartSync) GetUUIDBattle() uint64 {
	if m != nil {
		return m.UUIDBattle
	}
	return 0
}

func (m *MsgBattleStartSync) GetUUIDToken() uint64 {
	if m != nil {
		return m.UUIDToken
	}
	return 0
}

func (m *MsgBattleStartSync) GetPreloadBattle() map[int32]int32 {
	if m != nil {
		return m.PreloadBattle
	}
	return nil
}

func (m *MsgBattleStartSync) GetPreloadScene() map[int32]int32 {
	if m != nil {
		return m.PreloadScene
	}
	return nil
}

func (m *MsgBattleStartSync) GetUniqueid() int32 {
	if m != nil {
		return m.Uniqueid
	}
	return 0
}

func (m *MsgBattleStartSync) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleMember struct {
	Members []*StBattleMember `protobuf:"bytes,1,rep,name=members" json:"members,omitempty"`
}

func (m *MsgBattleMember) Reset()                    { *m = MsgBattleMember{} }
func (m *MsgBattleMember) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleMember) ProtoMessage()               {}
func (*MsgBattleMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *MsgBattleMember) GetMembers() []*StBattleMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type MsgBattleMemberLeave struct {
	Leaved int32 `protobuf:"varint,1,opt,name=leaved" json:"leaved,omitempty"`
}

func (m *MsgBattleMemberLeave) Reset()                    { *m = MsgBattleMemberLeave{} }
func (m *MsgBattleMemberLeave) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleMemberLeave) ProtoMessage()               {}
func (*MsgBattleMemberLeave) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *MsgBattleMemberLeave) GetLeaved() int32 {
	if m != nil {
		return m.Leaved
	}
	return 0
}

type MsgBattleProp struct {
	Props []*StBattleProp `protobuf:"bytes,1,rep,name=props" json:"props,omitempty"`
}

func (m *MsgBattleProp) Reset()                    { *m = MsgBattleProp{} }
func (m *MsgBattleProp) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleProp) ProtoMessage()               {}
func (*MsgBattleProp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *MsgBattleProp) GetProps() []*StBattleProp {
	if m != nil {
		return m.Props
	}
	return nil
}

type MsgBattlePickProp struct {
	Roleuniqueid   int32 `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	Itemuniqueid   int32 `protobuf:"varint,2,opt,name=itemuniqueid" json:"itemuniqueid,omitempty"`
	Itemtemplateid int32 `protobuf:"varint,3,opt,name=itemtemplateid" json:"itemtemplateid,omitempty"`
	Itemnumber     int32 `protobuf:"varint,4,opt,name=itemnumber" json:"itemnumber,omitempty"`
	Result         int32 `protobuf:"varint,5,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattlePickProp) Reset()                    { *m = MsgBattlePickProp{} }
func (m *MsgBattlePickProp) String() string            { return proto.CompactTextString(m) }
func (*MsgBattlePickProp) ProtoMessage()               {}
func (*MsgBattlePickProp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *MsgBattlePickProp) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattlePickProp) GetItemuniqueid() int32 {
	if m != nil {
		return m.Itemuniqueid
	}
	return 0
}

func (m *MsgBattlePickProp) GetItemtemplateid() int32 {
	if m != nil {
		return m.Itemtemplateid
	}
	return 0
}

func (m *MsgBattlePickProp) GetItemnumber() int32 {
	if m != nil {
		return m.Itemnumber
	}
	return 0
}

func (m *MsgBattlePickProp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleDropProp struct {
	Roleuniqueid   int32      `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	Position       *StVector3 `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Itemuniqueid   int32      `protobuf:"varint,3,opt,name=itemuniqueid" json:"itemuniqueid,omitempty"`
	Itemtemplateid int32      `protobuf:"varint,4,opt,name=itemtemplateid" json:"itemtemplateid,omitempty"`
	Itemnumber     int32      `protobuf:"varint,5,opt,name=itemnumber" json:"itemnumber,omitempty"`
	Result         int32      `protobuf:"varint,6,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleDropProp) Reset()                    { *m = MsgBattleDropProp{} }
func (m *MsgBattleDropProp) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleDropProp) ProtoMessage()               {}
func (*MsgBattleDropProp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *MsgBattleDropProp) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleDropProp) GetPosition() *StVector3 {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MsgBattleDropProp) GetItemuniqueid() int32 {
	if m != nil {
		return m.Itemuniqueid
	}
	return 0
}

func (m *MsgBattleDropProp) GetItemtemplateid() int32 {
	if m != nil {
		return m.Itemtemplateid
	}
	return 0
}

func (m *MsgBattleDropProp) GetItemnumber() int32 {
	if m != nil {
		return m.Itemnumber
	}
	return 0
}

func (m *MsgBattleDropProp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleAddProp struct {
	Prop *StBattleProp `protobuf:"bytes,1,opt,name=prop" json:"prop,omitempty"`
}

func (m *MsgBattleAddProp) Reset()                    { *m = MsgBattleAddProp{} }
func (m *MsgBattleAddProp) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleAddProp) ProtoMessage()               {}
func (*MsgBattleAddProp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *MsgBattleAddProp) GetProp() *StBattleProp {
	if m != nil {
		return m.Prop
	}
	return nil
}

type MsgBattleChangeProp struct {
	Itemuniqueid int32 `protobuf:"varint,1,opt,name=itemuniqueid" json:"itemuniqueid,omitempty"`
	Itemnumber   int32 `protobuf:"varint,2,opt,name=itemnumber" json:"itemnumber,omitempty"`
}

func (m *MsgBattleChangeProp) Reset()                    { *m = MsgBattleChangeProp{} }
func (m *MsgBattleChangeProp) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleChangeProp) ProtoMessage()               {}
func (*MsgBattleChangeProp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *MsgBattleChangeProp) GetItemuniqueid() int32 {
	if m != nil {
		return m.Itemuniqueid
	}
	return 0
}

func (m *MsgBattleChangeProp) GetItemnumber() int32 {
	if m != nil {
		return m.Itemnumber
	}
	return 0
}

type MsgBattleRemoveProp struct {
	Uniqueid int32 `protobuf:"varint,1,opt,name=uniqueid" json:"uniqueid,omitempty"`
}

func (m *MsgBattleRemoveProp) Reset()                    { *m = MsgBattleRemoveProp{} }
func (m *MsgBattleRemoveProp) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRemoveProp) ProtoMessage()               {}
func (*MsgBattleRemoveProp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *MsgBattleRemoveProp) GetUniqueid() int32 {
	if m != nil {
		return m.Uniqueid
	}
	return 0
}

type MsgBattleRoleAction struct {
	Roleuniqueid int32      `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	Action       int32      `protobuf:"varint,2,opt,name=action" json:"action,omitempty"`
	Position     *StVector3 `protobuf:"bytes,3,opt,name=position" json:"position,omitempty"`
	EyeField     *StVector3 `protobuf:"bytes,4,opt,name=eyeField" json:"eyeField,omitempty"`
	Move         *StVector2 `protobuf:"bytes,5,opt,name=move" json:"move,omitempty"`
	Result       int32      `protobuf:"varint,6,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleRoleAction) Reset()                    { *m = MsgBattleRoleAction{} }
func (m *MsgBattleRoleAction) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleAction) ProtoMessage()               {}
func (*MsgBattleRoleAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *MsgBattleRoleAction) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleAction) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *MsgBattleRoleAction) GetPosition() *StVector3 {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MsgBattleRoleAction) GetEyeField() *StVector3 {
	if m != nil {
		return m.EyeField
	}
	return nil
}

func (m *MsgBattleRoleAction) GetMove() *StVector2 {
	if m != nil {
		return m.Move
	}
	return nil
}

func (m *MsgBattleRoleAction) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleRoleEyeField struct {
	Roleuniqueid int32      `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	EyeField     *StVector3 `protobuf:"bytes,2,opt,name=eyeField" json:"eyeField,omitempty"`
}

func (m *MsgBattleRoleEyeField) Reset()                    { *m = MsgBattleRoleEyeField{} }
func (m *MsgBattleRoleEyeField) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleEyeField) ProtoMessage()               {}
func (*MsgBattleRoleEyeField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *MsgBattleRoleEyeField) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleEyeField) GetEyeField() *StVector3 {
	if m != nil {
		return m.EyeField
	}
	return nil
}

type MsgBattleRoleMove struct {
	Roleuniqueid  int32      `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	SpeedDocument int32      `protobuf:"varint,2,opt,name=speedDocument" json:"speedDocument,omitempty"`
	Move          *StVector2 `protobuf:"bytes,3,opt,name=move" json:"move,omitempty"`
	Result        int32      `protobuf:"varint,4,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleRoleMove) Reset()                    { *m = MsgBattleRoleMove{} }
func (m *MsgBattleRoleMove) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleMove) ProtoMessage()               {}
func (*MsgBattleRoleMove) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *MsgBattleRoleMove) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleMove) GetSpeedDocument() int32 {
	if m != nil {
		return m.SpeedDocument
	}
	return 0
}

func (m *MsgBattleRoleMove) GetMove() *StVector2 {
	if m != nil {
		return m.Move
	}
	return nil
}

func (m *MsgBattleRoleMove) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleRoleShootState struct {
	Roleuniqueid int32 `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	State        bool  `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	Result       int32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleRoleShootState) Reset()                    { *m = MsgBattleRoleShootState{} }
func (m *MsgBattleRoleShootState) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleShootState) ProtoMessage()               {}
func (*MsgBattleRoleShootState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *MsgBattleRoleShootState) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleShootState) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *MsgBattleRoleShootState) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleRoleShoot struct {
	Roleuniqueid int32      `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	Shootid      int32      `protobuf:"varint,2,opt,name=shootid" json:"shootid,omitempty"`
	Fireposition *StVector3 `protobuf:"bytes,3,opt,name=fireposition" json:"fireposition,omitempty"`
	Position     *StVector3 `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`
	EyeField     *StVector3 `protobuf:"bytes,5,opt,name=eyeField" json:"eyeField,omitempty"`
	Move         *StVector2 `protobuf:"bytes,6,opt,name=move" json:"move,omitempty"`
	Result       int32      `protobuf:"varint,7,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleRoleShoot) Reset()                    { *m = MsgBattleRoleShoot{} }
func (m *MsgBattleRoleShoot) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleShoot) ProtoMessage()               {}
func (*MsgBattleRoleShoot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *MsgBattleRoleShoot) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleShoot) GetShootid() int32 {
	if m != nil {
		return m.Shootid
	}
	return 0
}

func (m *MsgBattleRoleShoot) GetFireposition() *StVector3 {
	if m != nil {
		return m.Fireposition
	}
	return nil
}

func (m *MsgBattleRoleShoot) GetPosition() *StVector3 {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *MsgBattleRoleShoot) GetEyeField() *StVector3 {
	if m != nil {
		return m.EyeField
	}
	return nil
}

func (m *MsgBattleRoleShoot) GetMove() *StVector2 {
	if m != nil {
		return m.Move
	}
	return nil
}

func (m *MsgBattleRoleShoot) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleRoleShootHit struct {
	Roleuniqueid   int32      `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	Shootid        int32      `protobuf:"varint,2,opt,name=shootid" json:"shootid,omitempty"`
	Targetuniqueid int32      `protobuf:"varint,3,opt,name=targetuniqueid" json:"targetuniqueid,omitempty"`
	Endtag         string     `protobuf:"bytes,4,opt,name=endtag" json:"endtag,omitempty"`
	Endposition    *StVector3 `protobuf:"bytes,5,opt,name=endposition" json:"endposition,omitempty"`
	Endnormal      *StVector3 `protobuf:"bytes,6,opt,name=endnormal" json:"endnormal,omitempty"`
	Result         int32      `protobuf:"varint,7,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleRoleShootHit) Reset()                    { *m = MsgBattleRoleShootHit{} }
func (m *MsgBattleRoleShootHit) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleShootHit) ProtoMessage()               {}
func (*MsgBattleRoleShootHit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *MsgBattleRoleShootHit) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleShootHit) GetShootid() int32 {
	if m != nil {
		return m.Shootid
	}
	return 0
}

func (m *MsgBattleRoleShootHit) GetTargetuniqueid() int32 {
	if m != nil {
		return m.Targetuniqueid
	}
	return 0
}

func (m *MsgBattleRoleShootHit) GetEndtag() string {
	if m != nil {
		return m.Endtag
	}
	return ""
}

func (m *MsgBattleRoleShootHit) GetEndposition() *StVector3 {
	if m != nil {
		return m.Endposition
	}
	return nil
}

func (m *MsgBattleRoleShootHit) GetEndnormal() *StVector3 {
	if m != nil {
		return m.Endnormal
	}
	return nil
}

func (m *MsgBattleRoleShootHit) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleRoleHeal struct {
	Roleuniqueid   int32 `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	Itemtemplateid int32 `protobuf:"varint,2,opt,name=itemtemplateid" json:"itemtemplateid,omitempty"`
	State          int32 `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	Result         int32 `protobuf:"varint,4,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleRoleHeal) Reset()                    { *m = MsgBattleRoleHeal{} }
func (m *MsgBattleRoleHeal) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleHeal) ProtoMessage()               {}
func (*MsgBattleRoleHeal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *MsgBattleRoleHeal) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleHeal) GetItemtemplateid() int32 {
	if m != nil {
		return m.Itemtemplateid
	}
	return 0
}

func (m *MsgBattleRoleHeal) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *MsgBattleRoleHeal) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleRoleHealth struct {
	Roleuniqueid int32 `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	Health       int32 `protobuf:"varint,2,opt,name=health" json:"health,omitempty"`
}

func (m *MsgBattleRoleHealth) Reset()                    { *m = MsgBattleRoleHealth{} }
func (m *MsgBattleRoleHealth) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleHealth) ProtoMessage()               {}
func (*MsgBattleRoleHealth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *MsgBattleRoleHealth) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleHealth) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

type MsgBattleRoleDead struct {
	Roleuniqueid   int32 `protobuf:"varint,1,opt,name=roleuniqueid" json:"roleuniqueid,omitempty"`
	Reason         int32 `protobuf:"varint,2,opt,name=reason" json:"reason,omitempty"`
	Sourceuniqueid int32 `protobuf:"varint,3,opt,name=sourceuniqueid" json:"sourceuniqueid,omitempty"`
	Way            int32 `protobuf:"varint,4,opt,name=way" json:"way,omitempty"`
	Result         int32 `protobuf:"varint,5,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleRoleDead) Reset()                    { *m = MsgBattleRoleDead{} }
func (m *MsgBattleRoleDead) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRoleDead) ProtoMessage()               {}
func (*MsgBattleRoleDead) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *MsgBattleRoleDead) GetRoleuniqueid() int32 {
	if m != nil {
		return m.Roleuniqueid
	}
	return 0
}

func (m *MsgBattleRoleDead) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

func (m *MsgBattleRoleDead) GetSourceuniqueid() int32 {
	if m != nil {
		return m.Sourceuniqueid
	}
	return 0
}

func (m *MsgBattleRoleDead) GetWay() int32 {
	if m != nil {
		return m.Way
	}
	return 0
}

func (m *MsgBattleRoleDead) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleRunAway struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *MsgBattleRunAway) Reset()                    { *m = MsgBattleRunAway{} }
func (m *MsgBattleRunAway) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleRunAway) ProtoMessage()               {}
func (*MsgBattleRunAway) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *MsgBattleRunAway) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgBattleSettle struct {
	Rank      int32 `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	RankCount int32 `protobuf:"varint,2,opt,name=rankCount" json:"rankCount,omitempty"`
	Kill      int32 `protobuf:"varint,3,opt,name=kill" json:"kill,omitempty"`
	RankScore int32 `protobuf:"varint,4,opt,name=rankScore" json:"rankScore,omitempty"`
	KillScore int32 `protobuf:"varint,5,opt,name=killScore" json:"killScore,omitempty"`
	Health    int32 `protobuf:"varint,6,opt,name=health" json:"health,omitempty"`
}

func (m *MsgBattleSettle) Reset()                    { *m = MsgBattleSettle{} }
func (m *MsgBattleSettle) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleSettle) ProtoMessage()               {}
func (*MsgBattleSettle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *MsgBattleSettle) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *MsgBattleSettle) GetRankCount() int32 {
	if m != nil {
		return m.RankCount
	}
	return 0
}

func (m *MsgBattleSettle) GetKill() int32 {
	if m != nil {
		return m.Kill
	}
	return 0
}

func (m *MsgBattleSettle) GetRankScore() int32 {
	if m != nil {
		return m.RankScore
	}
	return 0
}

func (m *MsgBattleSettle) GetKillScore() int32 {
	if m != nil {
		return m.KillScore
	}
	return 0
}

func (m *MsgBattleSettle) GetHealth() int32 {
	if m != nil {
		return m.Health
	}
	return 0
}

func init() {
	proto.RegisterType((*StDeviceInfo)(nil), "StDeviceInfo")
	proto.RegisterType((*StAccountData)(nil), "StAccountData")
	proto.RegisterType((*StTeamMember)(nil), "StTeamMember")
	proto.RegisterType((*StVector2)(nil), "StVector2")
	proto.RegisterType((*StVector3)(nil), "StVector3")
	proto.RegisterType((*StBattleMember)(nil), "StBattleMember")
	proto.RegisterType((*StBattleProp)(nil), "StBattleProp")
	proto.RegisterType((*MsgKeepAlive)(nil), "MsgKeepAlive")
	proto.RegisterType((*MsgServerRegister)(nil), "MsgServerRegister")
	proto.RegisterType((*MsgServerNewBattle)(nil), "MsgServerNewBattle")
	proto.RegisterType((*MsgServerBattleUserEnter)(nil), "MsgServerBattleUserEnter")
	proto.RegisterType((*MsgServerBattleUserLeave)(nil), "MsgServerBattleUserLeave")
	proto.RegisterType((*MsgPrepareLoginPlatformUniqueId)(nil), "MsgPrepareLoginPlatformUniqueId")
	proto.RegisterType((*MsgLoginPlatformUniqueId)(nil), "MsgLoginPlatformUniqueId")
	proto.RegisterType((*MsgLoginPlatformSidToken)(nil), "MsgLoginPlatformSidToken")
	proto.RegisterType((*MsgReLogin)(nil), "MsgReLogin")
	proto.RegisterType((*MsgKick)(nil), "MsgKick")
	proto.RegisterType((*MsgEnterGameWorld)(nil), "MsgEnterGameWorld")
	proto.RegisterType((*MsgAgentDisConnect)(nil), "MsgAgentDisConnect")
	proto.RegisterType((*MsgEnterTeam)(nil), "MsgEnterTeam")
	proto.RegisterType((*MsgInviteJoinTeam)(nil), "MsgInviteJoinTeam")
	proto.RegisterType((*MsgAnswerJoinTeam)(nil), "MsgAnswerJoinTeam")
	proto.RegisterType((*MsgLeaveTeam)(nil), "MsgLeaveTeam")
	proto.RegisterType((*MsgEnterMatchServer)(nil), "MsgEnterMatchServer")
	proto.RegisterType((*MsgLeaveMatchServer)(nil), "MsgLeaveMatchServer")
	proto.RegisterType((*MsgStartMatch)(nil), "MsgStartMatch")
	proto.RegisterType((*MsgStopMatch)(nil), "MsgStopMatch")
	proto.RegisterType((*MsgMatchResult)(nil), "MsgMatchResult")
	proto.RegisterType((*MsgBattleStartSync)(nil), "MsgBattleStartSync")
	proto.RegisterType((*MsgBattleMember)(nil), "MsgBattleMember")
	proto.RegisterType((*MsgBattleMemberLeave)(nil), "MsgBattleMemberLeave")
	proto.RegisterType((*MsgBattleProp)(nil), "MsgBattleProp")
	proto.RegisterType((*MsgBattlePickProp)(nil), "MsgBattlePickProp")
	proto.RegisterType((*MsgBattleDropProp)(nil), "MsgBattleDropProp")
	proto.RegisterType((*MsgBattleAddProp)(nil), "MsgBattleAddProp")
	proto.RegisterType((*MsgBattleChangeProp)(nil), "MsgBattleChangeProp")
	proto.RegisterType((*MsgBattleRemoveProp)(nil), "MsgBattleRemoveProp")
	proto.RegisterType((*MsgBattleRoleAction)(nil), "MsgBattleRoleAction")
	proto.RegisterType((*MsgBattleRoleEyeField)(nil), "MsgBattleRoleEyeField")
	proto.RegisterType((*MsgBattleRoleMove)(nil), "MsgBattleRoleMove")
	proto.RegisterType((*MsgBattleRoleShootState)(nil), "MsgBattleRoleShootState")
	proto.RegisterType((*MsgBattleRoleShoot)(nil), "MsgBattleRoleShoot")
	proto.RegisterType((*MsgBattleRoleShootHit)(nil), "MsgBattleRoleShootHit")
	proto.RegisterType((*MsgBattleRoleHeal)(nil), "MsgBattleRoleHeal")
	proto.RegisterType((*MsgBattleRoleHealth)(nil), "MsgBattleRoleHealth")
	proto.RegisterType((*MsgBattleRoleDead)(nil), "MsgBattleRoleDead")
	proto.RegisterType((*MsgBattleRunAway)(nil), "MsgBattleRunAway")
	proto.RegisterType((*MsgBattleSettle)(nil), "MsgBattleSettle")
	proto.RegisterEnum("MessageType", MessageType_name, MessageType_value)
}

func init() { proto.RegisterFile("ffProto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0x51, 0x6f, 0x1b, 0xc7,
	0x11, 0xee, 0x51, 0x24, 0x25, 0x8d, 0x44, 0x69, 0xb5, 0x96, 0x14, 0x5a, 0x75, 0x1d, 0xf9, 0xe2,
	0x28, 0xaa, 0x91, 0xb0, 0xad, 0x9d, 0x00, 0x41, 0x51, 0xa0, 0x55, 0x2c, 0x3b, 0x51, 0x63, 0x16,
	0xea, 0x51, 0x6a, 0xd1, 0xbe, 0xad, 0x8f, 0x2b, 0xea, 0xaa, 0xe3, 0x1d, 0xbd, 0xb7, 0x94, 0x4d,
	0xbf, 0x17, 0x28, 0x82, 0xf6, 0xb1, 0x3f, 0xa0, 0x05, 0xfa, 0xd4, 0x9f, 0xd0, 0xff, 0x51, 0xa0,
	0xaf, 0xed, 0x4b, 0x7f, 0x46, 0x31, 0xbb, 0x7b, 0x77, 0xbb, 0x47, 0x52, 0xa6, 0x91, 0x34, 0x2f,
	0xf2, 0xed, 0x37, 0xb3, 0x3b, 0xdf, 0xcc, 0xec, 0xce, 0xce, 0xd2, 0xd0, 0xba, 0xb8, 0x38, 0x15,
	0xa9, 0x4c, 0x3b, 0x23, 0xfc, 0xeb, 0xff, 0x61, 0x09, 0xd6, 0x7b, 0xf2, 0x98, 0x5f, 0x47, 0x21,
	0x3f, 0x49, 0x2e, 0x52, 0x7a, 0x17, 0xa0, 0xaf, 0x46, 0x9f, 0x9f, 0x9f, 0x1c, 0xb7, 0xbd, 0x7d,
	0xef, 0x70, 0x35, 0xb0, 0x90, 0x52, 0x7e, 0x36, 0x19, 0xf1, 0x76, 0xcd, 0x96, 0x23, 0x42, 0x0f,
	0x61, 0x33, 0x1d, 0x71, 0xc1, 0x64, 0x94, 0x0c, 0x7a, 0x93, 0x4c, 0xf2, 0x61, 0x7b, 0x49, 0x29,
	0x55, 0x61, 0xfa, 0x31, 0xec, 0x54, 0xa0, 0xa7, 0x6c, 0x18, 0xc5, 0x93, 0x76, 0x5d, 0xe9, 0xcf,
	0x16, 0xd2, 0xfb, 0xd0, 0x1a, 0x89, 0x34, 0xe4, 0x59, 0x96, 0x0a, 0x45, 0xa1, 0xa1, 0xb4, 0x5d,
	0x90, 0x76, 0x80, 0x16, 0xc0, 0x53, 0xc1, 0x5f, 0x8c, 0x79, 0x12, 0x4e, 0xda, 0xcd, 0x7d, 0xef,
	0xb0, 0x11, 0xcc, 0x90, 0xd0, 0x03, 0xd8, 0x28, 0xd0, 0xc7, 0xe9, 0x38, 0x91, 0xed, 0x65, 0xa5,
	0x5b, 0x41, 0xe9, 0x03, 0x20, 0x99, 0x62, 0xd3, 0xe5, 0xc3, 0x54, 0x4c, 0x7a, 0xd1, 0x6b, 0xde,
	0x5e, 0x51, 0x9a, 0x53, 0x38, 0x72, 0x18, 0x08, 0x36, 0xba, 0x8c, 0xc2, 0xcc, 0xd2, 0x5e, 0xd5,
	0x1c, 0xa6, 0x25, 0xfe, 0x7f, 0x3d, 0x68, 0xf5, 0xe4, 0x51, 0x18, 0xa2, 0xa5, 0x63, 0x26, 0x19,
	0x6d, 0xc3, 0x72, 0x94, 0x3d, 0x15, 0x3c, 0xbb, 0x54, 0x89, 0x58, 0x09, 0xf2, 0x21, 0x66, 0x21,
	0xe3, 0xe2, 0x9a, 0x8b, 0xb3, 0x68, 0xa8, 0xb3, 0xd0, 0x08, 0x2c, 0xa4, 0x94, 0xff, 0x36, 0x4d,
	0xb8, 0x4a, 0x40, 0x21, 0x47, 0x84, 0x52, 0xa8, 0x27, 0x6c, 0xc8, 0x4d, 0xa8, 0xd5, 0x37, 0xfd,
	0x01, 0x34, 0xfa, 0x4c, 0xb2, 0xac, 0xdd, 0xd8, 0x5f, 0x3a, 0x5c, 0x7b, 0x78, 0xbb, 0xe3, 0x90,
	0xe9, 0xe0, 0x9f, 0xec, 0x49, 0x22, 0xc5, 0x24, 0xd0, 0x7a, 0x7b, 0x9f, 0x02, 0x94, 0x20, 0x25,
	0xb0, 0x74, 0xc5, 0x27, 0x8a, 0x68, 0x23, 0xc0, 0x4f, 0xba, 0x0d, 0x8d, 0x6b, 0x16, 0x8f, 0x73,
	0x7e, 0x7a, 0xf0, 0xe3, 0xda, 0xa7, 0x9e, 0xff, 0x47, 0x0f, 0x77, 0xdd, 0x19, 0x67, 0x18, 0xaf,
	0xe7, 0x5c, 0x14, 0x7c, 0x3c, 0x8b, 0x4f, 0x27, 0xe7, 0x53, 0x53, 0x7c, 0xda, 0x1d, 0x7b, 0xc6,
	0x37, 0x4a, 0xe7, 0x03, 0x58, 0xed, 0xc9, 0x5f, 0xf1, 0x50, 0xa6, 0xe2, 0x21, 0x5d, 0x07, 0xef,
	0x95, 0x9a, 0x46, 0x02, 0xef, 0x15, 0x8e, 0x26, 0x6a, 0x02, 0x09, 0xbc, 0x89, 0xff, 0x49, 0xa9,
	0xf8, 0xe8, 0x26, 0x45, 0x1c, 0xbd, 0x56, 0x61, 0x27, 0x81, 0xf7, 0xda, 0xff, 0xb7, 0x07, 0x1b,
	0x3d, 0xf9, 0x19, 0x93, 0x32, 0xe6, 0xc6, 0xe1, 0x03, 0x58, 0x19, 0xa5, 0x59, 0x24, 0xa3, 0x34,
	0x51, 0x6b, 0xac, 0x3d, 0x84, 0x4e, 0xb1, 0x74, 0x50, 0xc8, 0xe8, 0x3e, 0x34, 0xb2, 0x68, 0x70,
	0x29, 0xd5, 0xd2, 0xae, 0x92, 0x16, 0xd0, 0x3d, 0x58, 0x19, 0x27, 0xd1, 0x8b, 0x31, 0x8f, 0xfa,
	0x26, 0xd1, 0xc5, 0x98, 0xfe, 0x30, 0x0f, 0x61, 0x5d, 0x85, 0x70, 0xaf, 0xe3, 0xb2, 0xf8, 0x46,
	0x83, 0xf8, 0x95, 0xca, 0xa9, 0x5e, 0xfe, 0x54, 0xa4, 0xa3, 0x85, 0x5d, 0xb4, 0x1d, 0xa8, 0x55,
	0x1c, 0xb8, 0x0b, 0x20, 0xf9, 0x70, 0x14, 0x33, 0x59, 0xba, 0x67, 0x21, 0x74, 0x17, 0x9a, 0xc9,
	0x18, 0x5d, 0x51, 0x3b, 0xb9, 0x11, 0x98, 0x91, 0x7f, 0x00, 0xeb, 0xdd, 0x6c, 0xf0, 0x25, 0xe7,
	0xa3, 0xa3, 0x38, 0xba, 0xe6, 0x96, 0x9e, 0xe7, 0xe8, 0x0d, 0x60, 0xab, 0x9b, 0x0d, 0x7a, 0xea,
	0x60, 0x04, 0x7c, 0x10, 0x65, 0x92, 0x0b, 0xeb, 0x70, 0x61, 0x7d, 0x31, 0x25, 0xb0, 0x44, 0x90,
	0xb0, 0x1e, 0x9d, 0x1c, 0xe7, 0x84, 0xf3, 0x31, 0x1a, 0x12, 0x3c, 0x1b, 0xc7, 0xd2, 0x90, 0x35,
	0x23, 0x3f, 0x06, 0x5a, 0x18, 0xfa, 0x05, 0x7f, 0xa9, 0xc3, 0x84, 0x96, 0xce, 0xcf, 0x4f, 0x8e,
	0xf5, 0x48, 0x59, 0xaa, 0x07, 0x16, 0x82, 0xf2, 0x71, 0xc6, 0xc5, 0x59, 0x7a, 0xc5, 0x13, 0x7d,
	0x0e, 0xea, 0x81, 0x85, 0xcc, 0xb5, 0x36, 0x82, 0x76, 0x61, 0x4d, 0x2f, 0x75, 0x9e, 0x71, 0xf1,
	0x24, 0x31, 0xde, 0xdd, 0x68, 0xf3, 0x0e, 0xac, 0x16, 0x16, 0x94, 0x7b, 0xf5, 0xa0, 0x04, 0xde,
	0xd2, 0xe2, 0x33, 0xce, 0xae, 0xf9, 0xff, 0xc9, 0xe2, 0xdf, 0x6a, 0xf0, 0x6e, 0x37, 0x1b, 0x9c,
	0x0a, 0x3e, 0x62, 0x82, 0x3f, 0x4b, 0x07, 0x51, 0x72, 0x1a, 0x33, 0x79, 0x91, 0x8a, 0xe1, 0xb9,
	0xda, 0x3e, 0x27, 0x6a, 0xfb, 0x64, 0xe3, 0xe7, 0x8f, 0x2f, 0x59, 0x92, 0xf0, 0xb8, 0xc8, 0x64,
	0x81, 0xd0, 0x0f, 0x61, 0x0b, 0x79, 0xe4, 0xf3, 0x3e, 0x4b, 0xc7, 0x49, 0xdf, 0xdc, 0x69, 0xd3,
	0x82, 0xaa, 0xb6, 0x32, 0x69, 0x2e, 0xb7, 0x69, 0x01, 0xda, 0x16, 0x2c, 0xe9, 0xa7, 0xc3, 0x1e,
	0x8b, 0xa5, 0x29, 0xb4, 0x16, 0x82, 0x5e, 0xcb, 0x68, 0xc8, 0x33, 0xc9, 0x86, 0x23, 0x75, 0x89,
	0x35, 0x82, 0x12, 0xc0, 0xd2, 0x7f, 0x11, 0xbd, 0x52, 0x53, 0xf5, 0xad, 0x95, 0x0f, 0x31, 0x1e,
	0x99, 0x64, 0x72, 0x9c, 0x99, 0x2b, 0xca, 0x8c, 0xac, 0x38, 0xad, 0x38, 0x71, 0xfa, 0x8b, 0xa7,
	0x52, 0x33, 0x3b, 0x40, 0xfb, 0xb0, 0x26, 0x31, 0xca, 0x8f, 0xc7, 0x99, 0x4c, 0x87, 0x26, 0x42,
	0x36, 0x44, 0x3f, 0xca, 0xef, 0x7b, 0xec, 0x0e, 0x4c, 0x15, 0x6a, 0x75, 0xec, 0x96, 0x21, 0xb0,
	0x14, 0xd0, 0x2b, 0x0c, 0x45, 0x19, 0x9b, 0x7a, 0x50, 0x02, 0x16, 0xc7, 0xba, 0x9b, 0xcb, 0x19,
	0x1c, 0x7b, 0x51, 0x5f, 0x6f, 0x80, 0xfb, 0xd0, 0x52, 0x84, 0x72, 0x81, 0x61, 0xe9, 0x82, 0xdf,
	0x0e, 0xcf, 0x17, 0x00, 0xdd, 0x6c, 0x10, 0xe8, 0xdd, 0x86, 0x6b, 0x84, 0x97, 0x3c, 0xbc, 0xc2,
	0x82, 0x69, 0x48, 0x95, 0xc0, 0xdb, 0x12, 0x9a, 0xb7, 0xcd, 0xef, 0xc1, 0x32, 0x56, 0xb2, 0x28,
	0xbc, 0xb2, 0x54, 0x3c, 0x47, 0x85, 0xab, 0x22, 0xa6, 0x4e, 0xf7, 0xe7, 0x6c, 0xc8, 0x7f, 0x9d,
	0x8a, 0xb8, 0xef, 0x14, 0x29, 0xaf, 0x52, 0xa4, 0x1c, 0xe7, 0x6b, 0xf3, 0x9d, 0x77, 0x99, 0x6c,
	0xab, 0x12, 0x76, 0x34, 0xe0, 0x89, 0x3c, 0x8e, 0xb2, 0xc7, 0x69, 0x92, 0xf0, 0x50, 0x9a, 0x4a,
	0xab, 0x8c, 0xe3, 0xed, 0x8c, 0xb3, 0x25, 0x67, 0xc3, 0xa8, 0x9f, 0x93, 0xd4, 0x23, 0xff, 0x4b,
	0x45, 0xf2, 0x24, 0xb9, 0x8e, 0x24, 0xff, 0x79, 0x1a, 0x25, 0x4a, 0xd9, 0x54, 0x86, 0x33, 0x26,
	0x06, 0x5c, 0xda, 0x95, 0x41, 0x23, 0x16, 0x95, 0x9a, 0x43, 0x25, 0x54, 0x8b, 0x1d, 0x25, 0xd9,
	0x4b, 0x2e, 0x8a, 0xc5, 0x7c, 0x58, 0x8f, 0xd4, 0xf2, 0xa7, 0x31, 0x9b, 0x98, 0x4a, 0xbf, 0x1a,
	0x38, 0x18, 0xf6, 0x19, 0xbf, 0x4b, 0x8d, 0xd3, 0x2b, 0x81, 0xfa, 0x9e, 0xeb, 0xef, 0x86, 0xf2,
	0x4c, 0x95, 0x30, 0x5c, 0xdf, 0xbf, 0x82, 0x5b, 0xb9, 0xa7, 0x5d, 0x26, 0xc3, 0x4b, 0x5d, 0xec,
	0xf0, 0x08, 0x21, 0x63, 0xd3, 0x2a, 0x19, 0x27, 0x6c, 0x08, 0x53, 0xa1, 0x7c, 0xe2, 0x6c, 0x68,
	0xa2, 0x5d, 0x8c, 0xe7, 0x1a, 0xff, 0x48, 0x19, 0x53, 0xc6, 0x6d, 0x63, 0xf3, 0xb6, 0x00, 0x83,
	0x16, 0x96, 0x5f, 0xc9, 0x84, 0x54, 0xea, 0x98, 0x62, 0xf5, 0xd1, 0x4d, 0xfb, 0xdc, 0xe8, 0x96,
	0x00, 0x32, 0xea, 0x49, 0xc1, 0x92, 0x01, 0x17, 0xf9, 0x0d, 0x96, 0x8f, 0xe7, 0x32, 0xd2, 0x89,
	0xee, 0xc9, 0x74, 0xa4, 0x2d, 0xcc, 0xa3, 0xf2, 0x1a, 0x36, 0xba, 0xd9, 0x40, 0xe9, 0x04, 0x0a,
	0xc1, 0xa0, 0xb3, 0x7e, 0x3f, 0x4f, 0x88, 0xfa, 0xae, 0xdc, 0x09, 0xb5, 0x59, 0x77, 0x82, 0x8a,
	0x91, 0xba, 0x13, 0xac, 0xf3, 0x59, 0xbd, 0x13, 0xdc, 0xf3, 0xf9, 0xd7, 0x25, 0xb5, 0x47, 0xf5,
	0x1a, 0x2a, 0x1a, 0xbd, 0x49, 0x12, 0x7e, 0x4d, 0x63, 0xcf, 0xa0, 0x75, 0x2a, 0x78, 0x9c, 0xb2,
	0xbe, 0x59, 0x40, 0x37, 0x53, 0x07, 0x9d, 0x69, 0x4b, 0x1d, 0x47, 0x51, 0x37, 0x56, 0xee, 0x64,
	0x7a, 0x02, 0xeb, 0x06, 0xe8, 0x85, 0x3c, 0xe1, 0xa6, 0xd9, 0x7e, 0xff, 0x86, 0xc5, 0x94, 0x9e,
	0x5e, 0xcb, 0x99, 0xea, 0x34, 0x4e, 0xcd, 0x4a, 0xe3, 0x54, 0x46, 0x68, 0xd9, 0x8e, 0xd0, 0xde,
	0xcf, 0x80, 0x4e, 0x73, 0x7c, 0x9b, 0x3e, 0x6f, 0xef, 0xa7, 0xb0, 0x35, 0x45, 0xec, 0xad, 0x1a,
	0xc5, 0x9f, 0xc0, 0x66, 0xe1, 0xac, 0xe9, 0x86, 0xbf, 0x0f, 0xcb, 0x43, 0xf5, 0x95, 0xb5, 0x3d,
	0x15, 0x8f, 0xcd, 0x4a, 0xa7, 0x1a, 0xe4, 0x72, 0xbf, 0x03, 0xdb, 0x95, 0xd9, 0xba, 0xc9, 0xd8,
	0x85, 0x66, 0x8c, 0x1f, 0x45, 0xdd, 0xd1, 0x23, 0xff, 0x63, 0x75, 0x32, 0xac, 0xb6, 0xf4, 0x3d,
	0x68, 0x8c, 0x44, 0x3a, 0xca, 0x2d, 0xb5, 0x3a, 0x76, 0xd3, 0x1a, 0x68, 0x99, 0xff, 0x0f, 0x4f,
	0x55, 0x18, 0x23, 0x88, 0xc2, 0x2b, 0x35, 0xd5, 0x87, 0x75, 0x91, 0xc6, 0xbc, 0x08, 0xba, 0xb6,
	0xe4, 0x60, 0xaa, 0x0a, 0x49, 0x3e, 0xac, 0x74, 0xb4, 0x0e, 0x86, 0xaf, 0x4d, 0x1c, 0x4f, 0x75,
	0xb6, 0x15, 0x14, 0xf7, 0x2d, 0x22, 0x4e, 0x87, 0x6b, 0x21, 0x56, 0x92, 0x1b, 0xce, 0x31, 0xf8,
	0x8f, 0xcd, 0xfe, 0x58, 0xa4, 0xa3, 0x85, 0xd9, 0xdb, 0x3d, 0x7b, 0xed, 0x86, 0x9e, 0xbd, 0xea,
	0xe5, 0xd2, 0x42, 0x5e, 0xd6, 0x17, 0xf0, 0xb2, 0x71, 0x83, 0x97, 0x4d, 0xc7, 0xcb, 0x4f, 0x80,
	0x14, 0x4e, 0x1e, 0xf5, 0xfb, 0xca, 0xc7, 0x7b, 0x50, 0xc7, 0x04, 0x9a, 0xf7, 0x46, 0x25, 0xb7,
	0x4a, 0xe4, 0xff, 0x46, 0x55, 0x56, 0x0d, 0x63, 0x1f, 0x38, 0xe0, 0x79, 0x74, 0x1c, 0x8f, 0xbc,
	0x19, 0x1e, 0xb9, 0x4c, 0x6b, 0x55, 0xa6, 0xfe, 0x8f, 0xac, 0xa5, 0x03, 0x3e, 0x4c, 0xaf, 0xf5,
	0xd2, 0xf6, 0x39, 0xf5, 0xdc, 0x73, 0xea, 0xff, 0xcb, 0xb3, 0xe7, 0xa4, 0x31, 0x3f, 0x0a, 0xf3,
	0x00, 0xbf, 0x31, 0x59, 0xbb, 0xd0, 0x64, 0x61, 0x91, 0xaa, 0x46, 0x60, 0x46, 0x4e, 0x12, 0x97,
	0x6e, 0x48, 0xe2, 0x01, 0xac, 0xf0, 0x09, 0x7f, 0x1a, 0xf1, 0x58, 0xa7, 0xa6, 0xa2, 0x97, 0xcb,
	0xe8, 0x5d, 0xa8, 0xa3, 0x2f, 0x2a, 0x35, 0xb6, 0xce, 0xc3, 0x40, 0xe1, 0x73, 0x13, 0x14, 0xc2,
	0x8e, 0xe3, 0xda, 0x93, 0x7c, 0xc1, 0x05, 0x77, 0x62, 0x41, 0xae, 0x36, 0x9f, 0x9c, 0xff, 0x67,
	0x7b, 0xaf, 0xa3, 0x95, 0x2e, 0x52, 0x5a, 0xc4, 0xc2, 0x7d, 0x68, 0x65, 0x23, 0xce, 0xfb, 0xc7,
	0x69, 0x38, 0x1e, 0xf2, 0x24, 0xef, 0x31, 0x5c, 0xb0, 0x70, 0x7e, 0xe9, 0x8d, 0xce, 0xbb, 0x57,
	0xd1, 0x15, 0xbc, 0xe3, 0xd0, 0xea, 0x5d, 0xa6, 0xa9, 0xec, 0x49, 0x26, 0x17, 0x23, 0xb7, 0x0d,
	0x0d, 0xec, 0xeb, 0xb9, 0xe9, 0x54, 0xf4, 0x60, 0xee, 0xdd, 0xfc, 0x55, 0xcd, 0xba, 0xf7, 0x0a,
	0x6b, 0x0b, 0x19, 0x6a, 0xc3, 0x72, 0x86, 0xca, 0x45, 0xa9, 0xca, 0x87, 0xb4, 0x03, 0xeb, 0x17,
	0x91, 0xe0, 0x37, 0x6c, 0x25, 0x47, 0xee, 0x6c, 0xbb, 0xfa, 0x82, 0xdb, 0xae, 0xb1, 0xc0, 0xb6,
	0x6b, 0xbe, 0x31, 0xf2, 0xce, 0x15, 0xe7, 0xff, 0xbe, 0x56, 0xd9, 0x77, 0x2a, 0x18, 0x5f, 0x44,
	0x5f, 0x37, 0x1e, 0x07, 0xb0, 0x21, 0x55, 0x5b, 0x5a, 0xa9, 0x7a, 0x15, 0x14, 0x79, 0xf1, 0xa4,
	0x2f, 0xd9, 0xc0, 0x3c, 0xfa, 0xcc, 0x88, 0x7e, 0x08, 0x6b, 0x3c, 0xe9, 0x17, 0x21, 0x9a, 0x76,
	0xdd, 0x16, 0xd3, 0x43, 0x58, 0xe5, 0x49, 0x3f, 0x49, 0xc5, 0x90, 0xc5, 0x53, 0x21, 0x78, 0x14,
	0x94, 0xc2, 0xb9, 0x71, 0xf8, 0x53, 0xf5, 0x64, 0x7c, 0xc1, 0x59, 0xbc, 0xe0, 0xd9, 0xab, 0x56,
	0xee, 0xda, 0xcc, 0xca, 0x5d, 0x6c, 0x52, 0x1d, 0x88, 0xa9, 0x4d, 0xea, 0x9e, 0x88, 0x5f, 0x56,
	0x2a, 0x1d, 0xd2, 0x91, 0x97, 0x8b, 0x56, 0xba, 0x4b, 0xa5, 0x9d, 0x57, 0x3a, 0x3d, 0xc2, 0xb7,
	0xad, 0xeb, 0xe2, 0x31, 0x67, 0xfd, 0x45, 0x57, 0x14, 0x9c, 0x65, 0x65, 0xed, 0xd4, 0x23, 0x74,
	0x3d, 0x4b, 0xc7, 0x22, 0xe4, 0xd5, 0x24, 0xbb, 0x28, 0x36, 0x3c, 0x2f, 0xd9, 0xc4, 0x78, 0x88,
	0x9f, 0x73, 0x2f, 0xe3, 0x07, 0xd6, 0x35, 0x15, 0x8c, 0x93, 0x23, 0x57, 0xd7, 0xed, 0x9d, 0xff,
	0xee, 0x59, 0xbd, 0x51, 0x8f, 0xab, 0x86, 0x91, 0x42, 0x5d, 0xb0, 0xe4, 0xca, 0x68, 0xaa, 0x6f,
	0x6c, 0x58, 0xf1, 0x5f, 0xfd, 0x4b, 0xb5, 0x76, 0xa0, 0x04, 0x70, 0xc6, 0x55, 0x14, 0xc7, 0x86,
	0xb9, 0xfa, 0xce, 0x67, 0xf4, 0xc2, 0x54, 0x70, 0xc3, 0xba, 0x04, 0x50, 0x8a, 0x5a, 0x5a, 0x6a,
	0x7e, 0x8b, 0x28, 0x00, 0x2b, 0xfa, 0x4d, 0x3b, 0xfa, 0x0f, 0xfe, 0xd9, 0x84, 0xb5, 0x2e, 0xcf,
	0x32, 0x36, 0xd0, 0x3f, 0xfd, 0xb7, 0x60, 0xb5, 0xf8, 0xc5, 0x8d, 0x7c, 0x87, 0x52, 0xd8, 0x70,
	0x7f, 0x58, 0x23, 0x1e, 0xbd, 0x05, 0x9b, 0x95, 0xdf, 0xc0, 0x48, 0x8d, 0xde, 0x86, 0x9d, 0x99,
	0x3f, 0x55, 0x91, 0xa5, 0x59, 0x22, 0xd5, 0xee, 0x91, 0x3a, 0xdd, 0x87, 0x3b, 0x37, 0xfd, 0xf6,
	0x43, 0x1a, 0x38, 0x79, 0xb6, 0xa8, 0x39, 0x25, 0xca, 0x7f, 0x6c, 0x20, 0xcb, 0x74, 0x0d, 0x96,
	0xcd, 0x03, 0x9f, 0xac, 0xd0, 0x15, 0xa8, 0xe3, 0xd3, 0x9b, 0xac, 0xa2, 0x37, 0xee, 0x0b, 0x9b,
	0x00, 0x7a, 0x53, 0x79, 0x0e, 0x93, 0x35, 0x8c, 0x42, 0xf1, 0x1a, 0x26, 0xeb, 0x38, 0xcf, 0x7d,
	0xf4, 0x92, 0x16, 0x62, 0xee, 0xdb, 0x95, 0x6c, 0xe0, 0xb4, 0xe2, 0xa9, 0x49, 0x36, 0xe9, 0x36,
	0x90, 0xea, 0x4b, 0x93, 0x10, 0x44, 0xab, 0x4f, 0x42, 0xb2, 0x45, 0x37, 0x00, 0xca, 0x97, 0x1f,
	0xa1, 0xb8, 0x54, 0xf1, 0x4c, 0x23, 0xb7, 0xe8, 0x26, 0xac, 0x59, 0xaf, 0x31, 0xb2, 0x8d, 0xb4,
	0x2b, 0x4f, 0x0d, 0xb2, 0x43, 0x09, 0xac, 0xdb, 0x4d, 0x35, 0xd9, 0xa5, 0x3b, 0xb0, 0x35, 0xd5,
	0x66, 0x93, 0x77, 0xd0, 0x5a, 0xd9, 0x53, 0x91, 0x36, 0x3a, 0xe3, 0xb6, 0xc9, 0xe4, 0x76, 0x89,
	0xe5, 0xcd, 0x27, 0xd9, 0xa3, 0x5b, 0xd0, 0x72, 0x7a, 0x35, 0xf2, 0x5d, 0x74, 0xa7, 0xda, 0x87,
	0x91, 0x3b, 0x25, 0x5a, 0xb6, 0x50, 0xe4, 0x7b, 0x16, 0x5a, 0x34, 0x49, 0xe4, 0x2e, 0xdd, 0x05,
	0x3a, 0xdd, 0x5f, 0x90, 0x77, 0x4b, 0x02, 0x79, 0x47, 0x40, 0xf6, 0x69, 0x1b, 0xb6, 0x67, 0x5d,
	0xc7, 0xe4, 0x5e, 0x19, 0x90, 0x42, 0x42, 0x7c, 0x77, 0xe9, 0xfc, 0x0a, 0x21, 0xef, 0xb9, 0x4b,
	0x63, 0x0d, 0x23, 0xf7, 0x5d, 0x72, 0xba, 0xae, 0x91, 0xf7, 0x5d, 0x4d, 0xac, 0x4c, 0xe4, 0xa0,
	0x8c, 0x82, 0x29, 0x05, 0xe4, 0x83, 0x32, 0xf2, 0xfa, 0xc0, 0x93, 0xc3, 0xe7, 0x4d, 0xf5, 0x7f,
	0x73, 0x8f, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x75, 0x5b, 0x5d, 0xac, 0x1b, 0x00, 0x00,
}
