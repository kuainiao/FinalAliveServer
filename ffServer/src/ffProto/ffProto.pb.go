// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ffProto.proto

/*
Package ffProto is a generated protocol buffer package.

It is generated from these files:
	ffProto.proto

It has these top-level messages:
	StAccountData
	MsgServerRegister
	MsgServerKeepAlive
	MsgPrepareLoginPlatformUniqueID
	MsgLoginPlatformUniqueID
	MsgLoginPlatformSidToken
	MsgReLogin
	MsgKick
	MsgEnterGameWorld
	MsgAgentDisConnect
	MsgKeepAlive
*/
package ffProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_ServerRegister               MessageType = 0
	MessageType_ServerKeepAlive              MessageType = 1
	MessageType_PrepareLoginPlatformUniqueID MessageType = 2
	MessageType_LoginPlatformUniqueID        MessageType = 3
	MessageType_LoginPlatformSidToken        MessageType = 4
	MessageType_ReLogin                      MessageType = 5
	MessageType_Kick                         MessageType = 6
	MessageType_EnterGameWorld               MessageType = 7
	MessageType_AgentDisConnect              MessageType = 8
	MessageType_KeepAlive                    MessageType = 9
	MessageType_SessionConnect               MessageType = -1
	MessageType_SessionDisConnect            MessageType = -2
)

var MessageType_name = map[int32]string{
	0:  "ServerRegister",
	1:  "ServerKeepAlive",
	2:  "PrepareLoginPlatformUniqueID",
	3:  "LoginPlatformUniqueID",
	4:  "LoginPlatformSidToken",
	5:  "ReLogin",
	6:  "Kick",
	7:  "EnterGameWorld",
	8:  "AgentDisConnect",
	9:  "KeepAlive",
	-1: "SessionConnect",
	-2: "SessionDisConnect",
}
var MessageType_value = map[string]int32{
	"ServerRegister":               0,
	"ServerKeepAlive":              1,
	"PrepareLoginPlatformUniqueID": 2,
	"LoginPlatformUniqueID":        3,
	"LoginPlatformSidToken":        4,
	"ReLogin":                      5,
	"Kick":                         6,
	"EnterGameWorld":               7,
	"AgentDisConnect":              8,
	"KeepAlive":                    9,
	"SessionConnect":               -1,
	"SessionDisConnect":            -2,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Generated by the msggen.py message compiler.
type StAccountData struct {
	IsFirst    bool    `protobuf:"varint,1,opt,name=isFirst" json:"isFirst,omitempty"`
	ServerTime int32   `protobuf:"varint,2,opt,name=serverTime" json:"serverTime,omitempty"`
	ServerZone int32   `protobuf:"varint,3,opt,name=serverZone" json:"serverZone,omitempty"`
	Name       string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	BaseKeys   []int32 `protobuf:"varint,5,rep,packed,name=baseKeys" json:"baseKeys,omitempty"`
	BaseDatas  []int32 `protobuf:"varint,6,rep,packed,name=baseDatas" json:"baseDatas,omitempty"`
}

func (m *StAccountData) Reset()                    { *m = StAccountData{} }
func (m *StAccountData) String() string            { return proto.CompactTextString(m) }
func (*StAccountData) ProtoMessage()               {}
func (*StAccountData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StAccountData) GetIsFirst() bool {
	if m != nil {
		return m.IsFirst
	}
	return false
}

func (m *StAccountData) GetServerTime() int32 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

func (m *StAccountData) GetServerZone() int32 {
	if m != nil {
		return m.ServerZone
	}
	return 0
}

func (m *StAccountData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StAccountData) GetBaseKeys() []int32 {
	if m != nil {
		return m.BaseKeys
	}
	return nil
}

func (m *StAccountData) GetBaseDatas() []int32 {
	if m != nil {
		return m.BaseDatas
	}
	return nil
}

type MsgServerRegister struct {
	ServerType string `protobuf:"bytes,1,opt,name=serverType" json:"serverType,omitempty"`
	ServerID   int32  `protobuf:"varint,2,opt,name=serverID" json:"serverID,omitempty"`
}

func (m *MsgServerRegister) Reset()                    { *m = MsgServerRegister{} }
func (m *MsgServerRegister) String() string            { return proto.CompactTextString(m) }
func (*MsgServerRegister) ProtoMessage()               {}
func (*MsgServerRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MsgServerRegister) GetServerType() string {
	if m != nil {
		return m.ServerType
	}
	return ""
}

func (m *MsgServerRegister) GetServerID() int32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

type MsgServerKeepAlive struct {
}

func (m *MsgServerKeepAlive) Reset()                    { *m = MsgServerKeepAlive{} }
func (m *MsgServerKeepAlive) String() string            { return proto.CompactTextString(m) }
func (*MsgServerKeepAlive) ProtoMessage()               {}
func (*MsgServerKeepAlive) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type MsgPrepareLoginPlatformUniqueID struct {
	SubChannel        string `protobuf:"bytes,1,opt,name=subChannel" json:"subChannel,omitempty"`
	UUIDPlatformBound string `protobuf:"bytes,2,opt,name=UUIDPlatformBound" json:"UUIDPlatformBound,omitempty"`
	UUIDPlatformLogin string `protobuf:"bytes,3,opt,name=UUIDPlatformLogin" json:"UUIDPlatformLogin,omitempty"`
	RandomSalt        string `protobuf:"bytes,4,opt,name=randomSalt" json:"randomSalt,omitempty"`
	Timestamp         int32  `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Status            int32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	Result            int32  `protobuf:"varint,7,opt,name=result" json:"result,omitempty"`
}

func (m *MsgPrepareLoginPlatformUniqueID) Reset()                    { *m = MsgPrepareLoginPlatformUniqueID{} }
func (m *MsgPrepareLoginPlatformUniqueID) String() string            { return proto.CompactTextString(m) }
func (*MsgPrepareLoginPlatformUniqueID) ProtoMessage()               {}
func (*MsgPrepareLoginPlatformUniqueID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MsgPrepareLoginPlatformUniqueID) GetSubChannel() string {
	if m != nil {
		return m.SubChannel
	}
	return ""
}

func (m *MsgPrepareLoginPlatformUniqueID) GetUUIDPlatformBound() string {
	if m != nil {
		return m.UUIDPlatformBound
	}
	return ""
}

func (m *MsgPrepareLoginPlatformUniqueID) GetUUIDPlatformLogin() string {
	if m != nil {
		return m.UUIDPlatformLogin
	}
	return ""
}

func (m *MsgPrepareLoginPlatformUniqueID) GetRandomSalt() string {
	if m != nil {
		return m.RandomSalt
	}
	return ""
}

func (m *MsgPrepareLoginPlatformUniqueID) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgPrepareLoginPlatformUniqueID) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MsgPrepareLoginPlatformUniqueID) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgLoginPlatformUniqueID struct {
	TokenCustom string `protobuf:"bytes,1,opt,name=tokenCustom" json:"tokenCustom,omitempty"`
	DeviceGUID  string `protobuf:"bytes,2,opt,name=deviceGUID" json:"deviceGUID,omitempty"`
	UUIDLogin   uint64 `protobuf:"varint,3,opt,name=UUIDLogin" json:"UUIDLogin,omitempty"`
	Result      int32  `protobuf:"varint,4,opt,name=result" json:"result,omitempty"`
}

func (m *MsgLoginPlatformUniqueID) Reset()                    { *m = MsgLoginPlatformUniqueID{} }
func (m *MsgLoginPlatformUniqueID) String() string            { return proto.CompactTextString(m) }
func (*MsgLoginPlatformUniqueID) ProtoMessage()               {}
func (*MsgLoginPlatformUniqueID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MsgLoginPlatformUniqueID) GetTokenCustom() string {
	if m != nil {
		return m.TokenCustom
	}
	return ""
}

func (m *MsgLoginPlatformUniqueID) GetDeviceGUID() string {
	if m != nil {
		return m.DeviceGUID
	}
	return ""
}

func (m *MsgLoginPlatformUniqueID) GetUUIDLogin() uint64 {
	if m != nil {
		return m.UUIDLogin
	}
	return 0
}

func (m *MsgLoginPlatformUniqueID) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgLoginPlatformSidToken struct {
	TokenPlatform string `protobuf:"bytes,1,opt,name=tokenPlatform" json:"tokenPlatform,omitempty"`
	DeviceGUID    string `protobuf:"bytes,2,opt,name=deviceGUID" json:"deviceGUID,omitempty"`
	UUIDLogin     uint64 `protobuf:"varint,3,opt,name=UUIDLogin" json:"UUIDLogin,omitempty"`
	Result        int32  `protobuf:"varint,4,opt,name=result" json:"result,omitempty"`
}

func (m *MsgLoginPlatformSidToken) Reset()                    { *m = MsgLoginPlatformSidToken{} }
func (m *MsgLoginPlatformSidToken) String() string            { return proto.CompactTextString(m) }
func (*MsgLoginPlatformSidToken) ProtoMessage()               {}
func (*MsgLoginPlatformSidToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MsgLoginPlatformSidToken) GetTokenPlatform() string {
	if m != nil {
		return m.TokenPlatform
	}
	return ""
}

func (m *MsgLoginPlatformSidToken) GetDeviceGUID() string {
	if m != nil {
		return m.DeviceGUID
	}
	return ""
}

func (m *MsgLoginPlatformSidToken) GetUUIDLogin() uint64 {
	if m != nil {
		return m.UUIDLogin
	}
	return 0
}

func (m *MsgLoginPlatformSidToken) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgReLogin struct {
	CheckData  string `protobuf:"bytes,1,opt,name=checkData" json:"checkData,omitempty"`
	DeviceGUID string `protobuf:"bytes,2,opt,name=deviceGUID" json:"deviceGUID,omitempty"`
	Result     int32  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgReLogin) Reset()                    { *m = MsgReLogin{} }
func (m *MsgReLogin) String() string            { return proto.CompactTextString(m) }
func (*MsgReLogin) ProtoMessage()               {}
func (*MsgReLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MsgReLogin) GetCheckData() string {
	if m != nil {
		return m.CheckData
	}
	return ""
}

func (m *MsgReLogin) GetDeviceGUID() string {
	if m != nil {
		return m.DeviceGUID
	}
	return ""
}

func (m *MsgReLogin) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgKick struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *MsgKick) Reset()                    { *m = MsgKick{} }
func (m *MsgKick) String() string            { return proto.CompactTextString(m) }
func (*MsgKick) ProtoMessage()               {}
func (*MsgKick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *MsgKick) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgEnterGameWorld struct {
	ServerID  int32  `protobuf:"varint,1,opt,name=serverID" json:"serverID,omitempty"`
	UUIDLogin uint64 `protobuf:"varint,2,opt,name=UUIDLogin" json:"UUIDLogin,omitempty"`
	Result    int32  `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
}

func (m *MsgEnterGameWorld) Reset()                    { *m = MsgEnterGameWorld{} }
func (m *MsgEnterGameWorld) String() string            { return proto.CompactTextString(m) }
func (*MsgEnterGameWorld) ProtoMessage()               {}
func (*MsgEnterGameWorld) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MsgEnterGameWorld) GetServerID() int32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

func (m *MsgEnterGameWorld) GetUUIDLogin() uint64 {
	if m != nil {
		return m.UUIDLogin
	}
	return 0
}

func (m *MsgEnterGameWorld) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MsgAgentDisConnect struct {
}

func (m *MsgAgentDisConnect) Reset()                    { *m = MsgAgentDisConnect{} }
func (m *MsgAgentDisConnect) String() string            { return proto.CompactTextString(m) }
func (*MsgAgentDisConnect) ProtoMessage()               {}
func (*MsgAgentDisConnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type MsgKeepAlive struct {
	Number int32 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *MsgKeepAlive) Reset()                    { *m = MsgKeepAlive{} }
func (m *MsgKeepAlive) String() string            { return proto.CompactTextString(m) }
func (*MsgKeepAlive) ProtoMessage()               {}
func (*MsgKeepAlive) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MsgKeepAlive) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*StAccountData)(nil), "StAccountData")
	proto.RegisterType((*MsgServerRegister)(nil), "MsgServerRegister")
	proto.RegisterType((*MsgServerKeepAlive)(nil), "MsgServerKeepAlive")
	proto.RegisterType((*MsgPrepareLoginPlatformUniqueID)(nil), "MsgPrepareLoginPlatformUniqueID")
	proto.RegisterType((*MsgLoginPlatformUniqueID)(nil), "MsgLoginPlatformUniqueID")
	proto.RegisterType((*MsgLoginPlatformSidToken)(nil), "MsgLoginPlatformSidToken")
	proto.RegisterType((*MsgReLogin)(nil), "MsgReLogin")
	proto.RegisterType((*MsgKick)(nil), "MsgKick")
	proto.RegisterType((*MsgEnterGameWorld)(nil), "MsgEnterGameWorld")
	proto.RegisterType((*MsgAgentDisConnect)(nil), "MsgAgentDisConnect")
	proto.RegisterType((*MsgKeepAlive)(nil), "MsgKeepAlive")
	proto.RegisterEnum("MessageType", MessageType_name, MessageType_value)
}

func init() { proto.RegisterFile("ffProto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 622 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0x1f, 0xe7, 0xdd, 0xd3, 0x27, 0xe0, 0x2e, 0x2f, 0x32, 0x50, 0x95, 0x10, 0x21, 0x14,
	0x21, 0xc4, 0x85, 0x4f, 0x50, 0x1a, 0xa8, 0xaa, 0x12, 0x51, 0x39, 0x8d, 0x90, 0xb8, 0x6d, 0x9c,
	0xa9, 0xbb, 0xaa, 0xbd, 0x1b, 0x76, 0xd7, 0x95, 0xfa, 0x19, 0xb8, 0x71, 0xe0, 0xc0, 0x17, 0xe1,
	0xdb, 0x01, 0xda, 0xf5, 0x7b, 0x1a, 0xe0, 0x44, 0x0f, 0x95, 0xe7, 0xff, 0x1f, 0xef, 0xfc, 0x66,
	0xbc, 0x13, 0x18, 0x9e, 0x9f, 0x9f, 0x4a, 0xa1, 0xc5, 0xcb, 0xb5, 0xf9, 0x3f, 0xfe, 0xee, 0xc0,
	0x70, 0xae, 0x0f, 0xc2, 0x50, 0xa4, 0x5c, 0x4f, 0xa9, 0xa6, 0xc4, 0x87, 0x3e, 0x53, 0x6f, 0x99,
	0x54, 0xda, 0x77, 0x46, 0xce, 0x64, 0x10, 0x14, 0x21, 0xd9, 0x07, 0x50, 0x28, 0xaf, 0x50, 0x9e,
	0xb1, 0x04, 0xfd, 0xd6, 0xc8, 0x99, 0x74, 0x83, 0x9a, 0x52, 0xf9, 0x1f, 0x05, 0x47, 0xbf, 0x5d,
	0xf7, 0x8d, 0x42, 0x08, 0x74, 0x38, 0x4d, 0xd0, 0xef, 0x8c, 0x9c, 0x89, 0x1b, 0xd8, 0x67, 0xf2,
	0x10, 0x06, 0x4b, 0xaa, 0xf0, 0x04, 0xaf, 0x95, 0xdf, 0x1d, 0xb5, 0x27, 0xdd, 0xa0, 0x8c, 0xc9,
	0x1e, 0xb8, 0xe6, 0xd9, 0x50, 0x29, 0xbf, 0x67, 0xcd, 0x4a, 0x18, 0xbf, 0x87, 0xdd, 0x99, 0x8a,
	0xe6, 0xf6, 0xf8, 0x00, 0x23, 0xa6, 0x34, 0xca, 0x1a, 0xe2, 0xf5, 0x1a, 0x2d, 0xbf, 0x1b, 0xd4,
	0x14, 0x53, 0x2e, 0x8b, 0x8e, 0xa7, 0x79, 0x03, 0x65, 0x3c, 0xbe, 0x0b, 0xa4, 0x3c, 0xf0, 0x04,
	0x71, 0x7d, 0x10, 0xb3, 0x2b, 0x1c, 0x7f, 0x6e, 0xc1, 0xe3, 0x99, 0x8a, 0x4e, 0x25, 0xae, 0xa9,
	0xc4, 0x77, 0x22, 0x62, 0xfc, 0x34, 0xa6, 0xfa, 0x5c, 0xc8, 0x64, 0xc1, 0xd9, 0xa7, 0x14, 0x8f,
	0xa7, 0xb6, 0x6a, 0xba, 0x3c, 0xbc, 0xa0, 0x9c, 0x63, 0x5c, 0x56, 0x2d, 0x15, 0xf2, 0x02, 0x76,
	0x17, 0x8b, 0xe3, 0x69, 0xf1, 0xde, 0x6b, 0x91, 0xf2, 0x95, 0x2d, 0xef, 0x06, 0x37, 0x8d, 0xcd,
	0x6c, 0x5b, 0xd2, 0x4e, 0x73, 0x23, 0xdb, 0x1a, 0xa6, 0xb6, 0xa4, 0x7c, 0x25, 0x92, 0x39, 0x8d,
	0x75, 0x3e, 0xda, 0x9a, 0x62, 0x86, 0xa8, 0x59, 0x82, 0x4a, 0xd3, 0x64, 0xed, 0x77, 0x6d, 0xcb,
	0x95, 0x40, 0xee, 0x43, 0x4f, 0x69, 0xaa, 0x53, 0x33, 0x5f, 0x63, 0xe5, 0x91, 0xd1, 0x25, 0xaa,
	0x34, 0xd6, 0x7e, 0x3f, 0xd3, 0xb3, 0x68, 0xfc, 0xc5, 0x01, 0x7f, 0xa6, 0xa2, 0xed, 0x63, 0x18,
	0xc1, 0x8e, 0x16, 0x97, 0xc8, 0x0f, 0x53, 0xa5, 0x45, 0x92, 0xcf, 0xa1, 0x2e, 0x19, 0xd8, 0x15,
	0x5e, 0xb1, 0x10, 0x8f, 0x16, 0xf9, 0x07, 0x70, 0x83, 0x9a, 0x62, 0x60, 0x4d, 0x87, 0x55, 0xcb,
	0x9d, 0xa0, 0x12, 0x6a, 0x50, 0x9d, 0x06, 0xd4, 0xd7, 0x2d, 0x50, 0x73, 0xb6, 0x3a, 0x33, 0x85,
	0xc9, 0x53, 0x18, 0x5a, 0x82, 0xc2, 0xc8, 0xb1, 0x9a, 0xe2, 0x3f, 0x02, 0x5b, 0x02, 0xcc, 0x54,
	0x14, 0x64, 0xb7, 0xc6, 0x9c, 0x11, 0x5e, 0x60, 0x78, 0x69, 0xae, 0x6f, 0x4e, 0x51, 0x09, 0x7f,
	0x25, 0xa8, 0x6a, 0xb4, 0x1b, 0x35, 0x9e, 0x40, 0x7f, 0xa6, 0xa2, 0x13, 0x16, 0x5e, 0xd6, 0x52,
	0x9c, 0x46, 0x0a, 0xda, 0x4d, 0x79, 0xc3, 0x35, 0xca, 0x23, 0x9a, 0xe0, 0x07, 0x21, 0xe3, 0x55,
	0x63, 0x13, 0x9c, 0xe6, 0x26, 0x34, 0xbb, 0x6d, 0xfd, 0xbe, 0xdb, 0x26, 0x49, 0xb6, 0x3f, 0x07,
	0x11, 0x72, 0x3d, 0x65, 0xea, 0x50, 0x70, 0x8e, 0xa1, 0x1e, 0x3f, 0x83, 0xff, 0x0d, 0x5f, 0xb1,
	0x4f, 0xe6, 0x6d, 0x9e, 0x26, 0x4b, 0x94, 0x05, 0x64, 0x16, 0x3d, 0xff, 0xd6, 0x82, 0x9d, 0x19,
	0x2a, 0x45, 0x23, 0xb4, 0x9b, 0x4a, 0xe0, 0x56, 0x73, 0xb7, 0xbd, 0xff, 0xc8, 0x1d, 0xb8, 0xbd,
	0xb1, 0x9e, 0x9e, 0x43, 0x46, 0xb0, 0xf7, 0xa7, 0xe5, 0xf4, 0x5a, 0xe4, 0x01, 0xdc, 0xdb, 0x6e,
	0xb5, 0x6f, 0x58, 0xc5, 0xb5, 0xf1, 0x3a, 0x64, 0x07, 0xfa, 0xf9, 0x97, 0xf3, 0xba, 0x64, 0x00,
	0x1d, 0x33, 0x62, 0xaf, 0x67, 0xb8, 0x9a, 0x93, 0xf4, 0xfa, 0x86, 0x6b, 0xa3, 0x6d, 0x6f, 0x40,
	0x86, 0xe0, 0x56, 0x98, 0x2e, 0x79, 0x64, 0xfa, 0x51, 0x8a, 0x09, 0x5e, 0xa4, 0xfc, 0x2c, 0xfe,
	0x1c, 0xb2, 0x0f, 0xbb, 0xb9, 0x59, 0x3b, 0xe2, 0x47, 0xe9, 0x2f, 0x7b, 0xf6, 0xc7, 0xfa, 0xd5,
	0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x9c, 0x82, 0x24, 0xbd, 0x05, 0x00, 0x00,
}
